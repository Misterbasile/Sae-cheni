LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;

ENTITY clock_divider IS
    PORT (
        CLOCK_50 : IN STD_LOGIC;  
        reset    : IN STD_LOGIC;  
        SW       : IN STD_LOGIC_VECTOR(1 DOWNTO 0);  -- Sélection de la vitesse
        clk_out  : OUT STD_LOGIC  
    );
END ENTITY clock_divider;

ARCHITECTURE behavior OF clock_divider IS
    SIGNAL counter      : INTEGER := 0;
    SIGNAL clk_internal : STD_LOGIC := '0';
    CONSTANT div_1Hz    : INTEGER := 25000000;  -- 50M / (2*1) = 25M
    CONSTANT div_3Hz    : INTEGER := 8333333;   -- 50M / (2*3) = 8.33M
    CONSTANT div_6Hz    : INTEGER := 4166666;   -- 50M / (2*6) = 4.16M
    CONSTANT div_9Hz    : INTEGER := 2777777;   -- 50M / (2*9) = 2.77M

    SIGNAL div_value : INTEGER := div_1Hz;  -- Valeur de division active

BEGIN
    -- Sélection du diviseur en fonction des switchs
    PROCESS (SW)
    BEGIN
        CASE SW IS
            WHEN "00" => div_value <= div_1Hz;
            WHEN "01" => div_value <= div_3Hz;
            WHEN "10" => div_value <= div_6Hz;
            WHEN "11" => div_value <= div_9Hz;
            WHEN OTHERS => div_value <= div_1Hz;  -- Valeur par défaut
        END CASE;
    END PROCESS;

    -- Génération de l'horloge lente
    PROCESS (CLOCK_50, reset)
    BEGIN
        IF reset = '1' THEN
            counter      <= 0;
            clk_internal <= '0';
        ELSIF rising_edge(CLOCK_50) THEN
            IF counter >= div_value THEN
                counter      <= 0;
                clk_internal <= NOT clk_internal;
            ELSE
                counter <= counter + 1;
            END IF;
        END IF;
    END PROCESS;

    clk_out <= clk_internal;

END ARCHITECTURE behavior;
